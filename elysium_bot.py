import os
import logging
from datetime import datetime, timedelta
from flask import Flask, request, render_template
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    ApplicationBuilder,
)

# —Ä–æ—Ñ–ª, –ø–∞—Ü–∞–Ω, –ª–æ–≥–∏—Ä—É–µ–º –≤—Å—ë, —á—Ç–æ–±—ã –Ω–µ –æ—Ñ–∞–Ω–∞—Ä–µ—Ç—å!
logging.basicConfig(
    format="%(asctime)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)
logger = logging.getLogger(__name__)

# —Ä–æ—Ñ–ª, —Ç—É—Ç –Ω–∞—à Flask, —á—Ç–æ–±—ã –Ω–µ —Ä—É—Ö–Ω—É–ª –∫ —á–µ—Ä—Ç—è–º
app = Flask(__name__, static_folder='static', template_folder='templates')

# —Ö—Ä–∞–Ω–∏–º –≤—Ä–µ–º—è –∫–æ–º–∞–Ω–¥, —á—Ç–æ–±—ã —Å–ø–∞–º–µ—Ä—ã –Ω–µ —Ç—Ä—ã–Ω–¥–µÃÅ–ª–∏
last_command_time = {}

# —Ä–æ—Ñ–ª, –∫–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç, —Ç–µ–ø–µ—Ä—å —Å render_template
@app.route('/')
def index():
    logger.info("–¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É /")
    try:
        return render_template('elysium_game.html')  # —Ä–æ—Ñ–ª, —Ä–µ–Ω–¥–µ—Ä–∏–º HTML!
    except Exception as e:
        logger.error(f"–ø–∏–∑–¥–µ—Ü —Å —Ñ–∞–π–ª–æ–º: {e}")
        return "—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—Ä–∞—Ç–∏—à–∫–∞, —á–µ–∫–Ω–∏ templates!", 404

# —Ä–æ—Ñ–ª, –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤–µ–±—Ö—É–∫–∞, —Ç–µ–ø–µ—Ä—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π, —Å—É–∫–∞!
@app.route('/telegram-webhook', methods=['POST'])
async def webhook():
    logger.info("–ø–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ–±—Ö—É–∫")
    update = Update.de_json(request.get_json(force=True), application.bot)
    await application.process_update(update)
    return '', 200

# —Ä–æ—Ñ–ª, –∫–æ–º–∞–Ω–¥–∞ /start, —á—Ç–æ–±—ã –ø–∞—Ü–∞–Ω—ã –∑–Ω–∞–ª–∏, —á—Ç–æ –¥–µ–ª–∞—Ç—å
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    now = datetime.now()
    if user_id in last_command_time and now - last_command_time[user_id] < timedelta(seconds=10):
        return  # —Å–ø–∞–º-—Ñ–∏–ª—å—Ç—Ä, –∞ —Ç–æ –ø–∏–∑–¥–µ—Ü!
    last_command_time[user_id] = now
    await update.message.reply_text("–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Elysium! /play ‚Äî –Ω–∞—á–Ω–∏ –∏–≥—Ä—É –≤ –º—Ä–∞—á–Ω–æ–º –ø–æ–¥–≤–∞–ª–µ")
    # –†–û–§–õ-–ö–û–ú–ú–ï–ù–¢: –µ—Å–ª–∏ –±–æ—Ç –º–æ–ª—á–∏—Ç, –ø–∏–∑–¥–µ—Ü, —á–µ–∫–Ω–∏ —Ç–æ–∫–µ–Ω –∏ —Å–µ—Ç—å!

# —Ä–æ—Ñ–ª, –∫–æ–º–∞–Ω–¥–∞ /play, —á—Ç–æ–±—ã –±—Ä–∞—Ç–∞–Ω—ã –º–æ–≥–ª–∏ —Ä–≤–∞—Ç—å –ø–æ–¥–≤–∞–ª
async def play(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    now = datetime.now()
    if user_id in last_command_time and now - last_command_time[user_id] < timedelta(seconds=10):
        return  # —Å–ø–∞–º-—Ñ–∏–ª—å—Ç—Ä, –∞ —Ç–æ –ø–∏–∑–¥–µ—Ü!
    last_command_time[user_id] = now
    web_app_url = os.getenv("WEB_APP_URL", "https://elysium-game.onrender.com")
    await update.message.reply_text(
        "—Å–ø—É—Å—Ç–∏—Å—å –≤ –ø–æ–¥–≤–∞–ª Elysium! —Å–æ–±–µ—Ä–∏ —Å–≤–∏—Ç–∫–∏ NFT üëπ",
        reply_markup={"inline_keyboard": [[{"text": "–ò–≥—Ä–∞—Ç—å", "web_app": {"url": web_app_url}}]]}
    )
    # –†–û–§–õ-–ö–û–ú–ú–ï–ù–¢: –µ—Å–ª–∏ –∏–≥—Ä–∞ –Ω–µ –≥—Ä—É–∑–∏—Ç, –ø–∏–∑–¥–µ—Ü, —á–µ–∫–Ω–∏ WEB_APP_URL!

# —Ä–æ—Ñ–ª, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞, —á—Ç–æ–±—ã –≤—Å—ë –∑–∞–≤–µ–ª–æ—Å—å
logger.info("–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ Elysium")
token = os.getenv("TELEGRAM_TOKEN", "7756024049:AAFoN1mPyIO0BWWOnikB6nv4FL3vb-5F8wo")
if not token or token == "YOUR_TELEGRAM_BOT_TOKEN":
    logger.error("–ø–∏–∑–¥–µ—Ü, —Ç–æ–∫–µ–Ω –Ω–µ –∑–∞–¥–∞–Ω, –±—Ä–∞—Ç–∏—à–∫–∞, –≤–æ–∑—å–º–∏ —É BotFather!")
    raise ValueError("—Ç–æ–∫–µ–Ω –Ω–µ –∑–∞–¥–∞–Ω, —á–µ–∫–Ω–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
application = Application.builder().token(token).build()

# —Ä–æ—Ñ–ª, –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –ø–∞—Ü–∞–Ω—ã –Ω–µ —Å–∫—É—á–∞–ª–∏
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("play", play))

async def initialize_application():
    await application.initialize()
    logger.info("—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤–µ–±—Ö—É–∫: https://elysium-game.onrender.com/telegram-webhook")
    await application.run_webhook(
        listen="0.0.0.0",
        port=int(os.getenv("PORT", 10000)),
        url_path="/telegram-webhook",
        webhook_url="https://elysium-game.onrender.com/telegram-webhook"
    )
    logger.info("–≤–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# —Ä–æ—Ñ–ª, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
with app.app_context():
    import asyncio
    loop = asyncio.get_event_loop()
    loop.run_until_complete(initialize_application())

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 10000)))
