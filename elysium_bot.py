import os
import logging
import asyncio
from flask import Flask, render_template, send_from_directory, request
from telegram import Bot, Update
from telegram.ext import Application, CommandHandler, ContextTypes
from datetime import datetime, timedelta

# –æ—Ç–∫–ª—é—á–∞–µ–º debug-–ª–æ–≥–∏ flask
log = logging.getLogger('werkzeug')
log.setLevel(logging.ERROR)

# –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)

# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–Ω–∞ Render –∑–∞–¥–∞–π—Ç–µ —á–µ—Ä–µ–∑ Variables)
telegram_token = os.getenv("TELEGRAM_TOKEN", "7756024049:AAFoN1mPyIO0BWWOnikB6nv4FL3vb-5F8wo")  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
admin_chat_id = os.getenv("ADMIN_CHAT_ID", "789334648")  # ID –∞–¥–º–∏–Ω–∞
port = int(os.getenv("PORT", 5000))  # –ø–æ—Ä—Ç –¥–ª—è Render

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
app = Flask(__name__, static_folder='static')
bot = Bot(token=telegram_token)
telegram_app = Application.builder().token(telegram_token).build()

# –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞ –∫–æ–º–∞–Ω–¥
last_command_time = {}

# –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    now = datetime.now()
    if user_id in last_command_time and now - last_command_time[user_id] < timedelta(seconds=10):
        return
    last_command_time[user_id] = now
    await update.message.reply_text("–¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Elysium! /play ‚Äî –Ω–∞—á–Ω–∏ –∏–≥—Ä—É –≤ –º—Ä–∞—á–Ω–æ–º –ø–æ–¥–≤–∞–ª–µ")

async def play(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    now = datetime.now()
    if user_id in last_command_time and now - last_command_time[user_id] < timedelta(seconds=10):
        return
    last_command_time[user_id] = now
    # –Ω–∞ Render URL –±—É–¥–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π, –∑–∞–¥–∞–π—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç–µ –≤—Ä—É—á–Ω—É—é
    web_app_url = os.getenv("WEB_APP_URL", "https://your-render-app.onrender.com")
    await update.message.reply_text(
        "—Å–ø—É—Å—Ç–∏—Å—å –≤ –ø–æ–¥–≤–∞–ª Elysium! —Å–æ–±–µ—Ä–∏ —Å–≤–∏—Ç–∫–∏ NFT üëπ",
        reply_markup={"inline_keyboard": [[{"text": "–ò–≥—Ä–∞—Ç—å", "web_app": {"url": web_app_url}}]]}
    )

async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = "–≤–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n" \
              "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n" \
              "/play ‚Äî –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –≤ Elysium\n" \
              "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    await update.message.reply_text(message)

# —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
telegram_app.add_handler(CommandHandler("start", start))
telegram_app.add_handler(CommandHandler("play", play))
telegram_app.add_handler(CommandHandler("help", help))

# –≥–ª–æ–±–∞–ª—å–Ω—ã–π event loop
loop = asyncio.get_event_loop()

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
logger.info("–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ Elysium")
loop.run_until_complete(bot.initialize())
loop.run_until_complete(telegram_app.initialize())

# –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ –¥–ª—è Render
webhook_url = os.getenv("WEB_APP_URL", "https://your-render-app.onrender.com") + "/telegram-webhook"
logger.info(f"—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤–µ–±—Ö—É–∫: {webhook_url}")
try:
    loop.run_until_complete(bot.set_webhook(webhook_url))
    logger.info("–≤–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
except Exception as e:
    logger.error(f"–æ—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞: {e}")

# flask —Ä–æ—É—Ç—ã
@app.route("/")
def index():
    logger.info("–¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É –º–∞—Ä—à—Ä—É—Ç—É /")
    return render_template("elysium_game.html")

@app.route('/<path:path>')
def static_files(path):
    logger.info(f"–¥–æ—Å—Ç—É–ø –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–º—É —Ñ–∞–π–ª—É: {path}")
    return send_from_directory('static', path)

@app.route("/telegram-webhook", methods=["POST"])
def telegram_webhook():
    logger.info("–ø–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ–±—Ö—É–∫")
    try:
        update = Update.de_json(request.get_json(force=True), bot)
        loop.run_until_complete(telegram_app.process_update(update))
        return "", 200
    except Exception as e:
        logger.error(f"–æ—à–∏–±–∫–∞ –≤ –≤–µ–±—Ö—É–∫–µ Elysium: {e}")
        return "", 500

if __name__ == "__main__":
    # –∑–∞–ø—É—Å–∫–∞–µ–º flask
    app.run(host="0.0.0.0", port=port)
